services:
  mysql_server:
    #build: ./infra/mysql
    image: mysql:latest
    container_name: mysql_server
    restart: always
    ports:
      - "3307:3306"
    volumes:
      - ${MYSQL_DATA_DIR}:/var/lib/mysql
      - ${LOG_DIR_MYSQL}:/var/log/mysql
      - ${MYSQL_DUMP_DIR}/init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MY_DATABASE}
    networks:
      - backend

  helloworld:
    image: ${API_IMAGE_NAME}
    container_name: helloworld
    restart: on-failure
    ports:
      - "9002:9000"
    environment:
    - SPRING_DATASOURCE_URL=${URL_BDD}
    # ce n'est pas parfait car données sensibles
    - SPRING_DATASOURCE_USERNAME=${MYSQL_USER}
    - SPRING_DATASOURCE_PASSWORD=${MYSQL_PASSWORD}
    - URL_API=${URL_API}
    # Paramètres Dialect de SpringBoot pour la connexion BDD
    - SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT=org.hibernate.dialect.MySQL8Dialect
    - SPRING_JPA_SHOW_SQL=true
    - SPRING_JPA_PROPERTIES_HIBERNATE_FORMAT_SQL=true
    depends_on:
      - mysql_server
    networks:
      - backend

  helloweb:
    image: ${WEB_IMAGE_NAME}
    container_name: helloweb
    ports:
      - "8000:9001"
    depends_on:
      - helloworld
    environment:
      - URL_API=${URL_API}
    # un appel HHTP est effectué qur la route http://helloworld:9000/persons
    healthcheck:
      test: curl -f http://helloworld:9002/api/persons || exit 1
      interval: 10s
      retries: 5
      start_period: 5s
      timeout: 10s
    networks:
      - backend

volumes:
  mysql_data:
  mysql_logs:
  mysql_dump:

networks:
  backend:
    driver: bridge